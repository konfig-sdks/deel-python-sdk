# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from deel_python_sdk import schemas  # noqa: F401


class TimeoffsProfile(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "profile_type",
            "name",
            "id",
        }
        
        class properties:
            id = schemas.StrSchema
            name = schemas.StrSchema
        
            @staticmethod
            def profile_type() -> typing.Type['ProfileTypeEnum']:
                return ProfileTypeEnum
        
            @staticmethod
            def pic_url() -> typing.Type['UrlTypeNullable']:
                return UrlTypeNullable
            is_employee = schemas.BoolSchema
            __annotations__ = {
                "id": id,
                "name": name,
                "profile_type": profile_type,
                "pic_url": pic_url,
                "is_employee": is_employee,
            }
    
    profile_type: 'ProfileTypeEnum'
    name: MetaOapg.properties.name
    id: MetaOapg.properties.id
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profile_type"]) -> 'ProfileTypeEnum': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pic_url"]) -> 'UrlTypeNullable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is_employee"]) -> MetaOapg.properties.is_employee: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "name", "profile_type", "pic_url", "is_employee", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profile_type"]) -> 'ProfileTypeEnum': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pic_url"]) -> typing.Union['UrlTypeNullable', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is_employee"]) -> typing.Union[MetaOapg.properties.is_employee, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "name", "profile_type", "pic_url", "is_employee", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        profile_type: 'ProfileTypeEnum',
        name: typing.Union[MetaOapg.properties.name, str, ],
        id: typing.Union[MetaOapg.properties.id, str, ],
        pic_url: typing.Union['UrlTypeNullable', schemas.Unset] = schemas.unset,
        is_employee: typing.Union[MetaOapg.properties.is_employee, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'TimeoffsProfile':
        return super().__new__(
            cls,
            *args,
            profile_type=profile_type,
            name=name,
            id=id,
            pic_url=pic_url,
            is_employee=is_employee,
            _configuration=_configuration,
            **kwargs,
        )

from deel_python_sdk.model.profile_type_enum import ProfileTypeEnum
from deel_python_sdk.model.url_type_nullable import UrlTypeNullable
