# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from deel_python_sdk import schemas  # noqa: F401


class WorkerTerminationBody(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "severance",
            "last_date_of_work",
            "message",
            "desired_end_date",
            "is_voluntary",
        }
        
        class properties:
            
            
            class desired_end_date(
                schemas.DateSchema
            ):
                pass
            
            
            class last_date_of_work(
                schemas.DateSchema
            ):
                pass
            message = schemas.StrSchema
            is_voluntary = schemas.BoolSchema
        
            @staticmethod
            def severance() -> typing.Type['WorkerTerminationBodySeverance']:
                return WorkerTerminationBodySeverance
            __annotations__ = {
                "desired_end_date": desired_end_date,
                "last_date_of_work": last_date_of_work,
                "message": message,
                "is_voluntary": is_voluntary,
                "severance": severance,
            }
    
    severance: 'WorkerTerminationBodySeverance'
    last_date_of_work: MetaOapg.properties.last_date_of_work
    message: MetaOapg.properties.message
    desired_end_date: MetaOapg.properties.desired_end_date
    is_voluntary: MetaOapg.properties.is_voluntary
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["desired_end_date"]) -> MetaOapg.properties.desired_end_date: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["last_date_of_work"]) -> MetaOapg.properties.last_date_of_work: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["message"]) -> MetaOapg.properties.message: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is_voluntary"]) -> MetaOapg.properties.is_voluntary: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["severance"]) -> 'WorkerTerminationBodySeverance': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["desired_end_date", "last_date_of_work", "message", "is_voluntary", "severance", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["desired_end_date"]) -> MetaOapg.properties.desired_end_date: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["last_date_of_work"]) -> MetaOapg.properties.last_date_of_work: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["message"]) -> MetaOapg.properties.message: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is_voluntary"]) -> MetaOapg.properties.is_voluntary: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["severance"]) -> 'WorkerTerminationBodySeverance': ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["desired_end_date", "last_date_of_work", "message", "is_voluntary", "severance", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        severance: 'WorkerTerminationBodySeverance',
        last_date_of_work: typing.Union[MetaOapg.properties.last_date_of_work, str, date, ],
        message: typing.Union[MetaOapg.properties.message, str, ],
        desired_end_date: typing.Union[MetaOapg.properties.desired_end_date, str, date, ],
        is_voluntary: typing.Union[MetaOapg.properties.is_voluntary, bool, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'WorkerTerminationBody':
        return super().__new__(
            cls,
            *args,
            severance=severance,
            last_date_of_work=last_date_of_work,
            message=message,
            desired_end_date=desired_end_date,
            is_voluntary=is_voluntary,
            _configuration=_configuration,
            **kwargs,
        )

from deel_python_sdk.model.worker_termination_body_severance import WorkerTerminationBodySeverance
