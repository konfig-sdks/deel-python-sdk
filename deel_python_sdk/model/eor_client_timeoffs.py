# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from deel_python_sdk import schemas  # noqa: F401


class EorClientTimeoffs(
    schemas.AnyTypeSchema,
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "total_requests",
            "employees",
        }
        
        class properties:
            
            
            class employees(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['EorTimeoffsEmployeeItem']:
                        return EorTimeoffsEmployeeItem
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['EorTimeoffsEmployeeItem'], typing.List['EorTimeoffsEmployeeItem']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'employees':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'EorTimeoffsEmployeeItem':
                    return super().__getitem__(i)
            total_requests = schemas.NumberSchema
            __annotations__ = {
                "employees": employees,
                "total_requests": total_requests,
            }

    
    total_requests: MetaOapg.properties.total_requests
    employees: MetaOapg.properties.employees
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employees"]) -> MetaOapg.properties.employees: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["total_requests"]) -> MetaOapg.properties.total_requests: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["employees", "total_requests", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employees"]) -> MetaOapg.properties.employees: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["total_requests"]) -> MetaOapg.properties.total_requests: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["employees", "total_requests", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        total_requests: typing.Union[MetaOapg.properties.total_requests, decimal.Decimal, int, float, ],
        employees: typing.Union[MetaOapg.properties.employees, list, tuple, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EorClientTimeoffs':
        return super().__new__(
            cls,
            *args,
            total_requests=total_requests,
            employees=employees,
            _configuration=_configuration,
            **kwargs,
        )

from deel_python_sdk.model.eor_timeoffs_employee_item import EorTimeoffsEmployeeItem
