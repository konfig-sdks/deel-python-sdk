# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from deel_python_sdk import schemas  # noqa: F401


class ContractStatusEnum(
    schemas.EnumBase,
    schemas.StrSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Status of a contract in Deel workflow
    """
    
    @schemas.classproperty
    def NEW(cls):
        return cls("new")
    
    @schemas.classproperty
    def UNDER_REVIEW(cls):
        return cls("under_review")
    
    @schemas.classproperty
    def WAITING_FOR_EMPLOYEE_CONTRACT(cls):
        return cls("waiting_for_employee_contract")
    
    @schemas.classproperty
    def WAITING_FOR_CLIENT_SIGN(cls):
        return cls("waiting_for_client_sign")
    
    @schemas.classproperty
    def PROCESSING_PAYMENT(cls):
        return cls("processing_payment")
    
    @schemas.classproperty
    def WAITING_FOR_CONTRACTOR_SIGN(cls):
        return cls("waiting_for_contractor_sign")
    
    @schemas.classproperty
    def WAITING_FOR_EOR_SIGN(cls):
        return cls("waiting_for_eor_sign")
    
    @schemas.classproperty
    def WAITING_FOR_EMPLOYEE_SIGN(cls):
        return cls("waiting_for_employee_sign")
    
    @schemas.classproperty
    def AWAITING_DEPOSIT_PAYMENT(cls):
        return cls("awaiting_deposit_payment")
    
    @schemas.classproperty
    def IN_PROGRESS(cls):
        return cls("in_progress")
    
    @schemas.classproperty
    def COMPLETED(cls):
        return cls("completed")
    
    @schemas.classproperty
    def CANCELLED(cls):
        return cls("cancelled")
    
    @schemas.classproperty
    def USER_CANCELLED(cls):
        return cls("user_cancelled")
    
    @schemas.classproperty
    def REJECTED(cls):
        return cls("rejected")
    
    @schemas.classproperty
    def WAITING_FOR_CLIENT_PAYMENT(cls):
        return cls("waiting_for_client_payment")
