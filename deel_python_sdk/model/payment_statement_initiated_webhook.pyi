# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from deel_python_sdk import schemas  # noqa: F401


class PaymentStatementInitiatedWebhook(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "invoices",
            "billing_invoices",
        }
        
        class properties:
        
            @staticmethod
            def billing_invoices() -> typing.Type['PaymentStatementInitiatedWebhookBillingInvoices']:
                return PaymentStatementInitiatedWebhookBillingInvoices
        
            @staticmethod
            def invoices() -> typing.Type['PaymentStatementInitiatedWebhookInvoices']:
                return PaymentStatementInitiatedWebhookInvoices
            __annotations__ = {
                "billing_invoices": billing_invoices,
                "invoices": invoices,
            }
    
    invoices: 'PaymentStatementInitiatedWebhookInvoices'
    billing_invoices: 'PaymentStatementInitiatedWebhookBillingInvoices'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["billing_invoices"]) -> 'PaymentStatementInitiatedWebhookBillingInvoices': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["invoices"]) -> 'PaymentStatementInitiatedWebhookInvoices': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["billing_invoices", "invoices", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["billing_invoices"]) -> 'PaymentStatementInitiatedWebhookBillingInvoices': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["invoices"]) -> 'PaymentStatementInitiatedWebhookInvoices': ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["billing_invoices", "invoices", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        invoices: 'PaymentStatementInitiatedWebhookInvoices',
        billing_invoices: 'PaymentStatementInitiatedWebhookBillingInvoices',
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PaymentStatementInitiatedWebhook':
        return super().__new__(
            cls,
            *args,
            invoices=invoices,
            billing_invoices=billing_invoices,
            _configuration=_configuration,
            **kwargs,
        )

from deel_python_sdk.model.payment_statement_initiated_webhook_billing_invoices import PaymentStatementInitiatedWebhookBillingInvoices
from deel_python_sdk.model.payment_statement_initiated_webhook_invoices import PaymentStatementInitiatedWebhookInvoices
