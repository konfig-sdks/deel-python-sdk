# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from deel_python_sdk.pydantic.health_insurance_provider_attachments import HealthInsuranceProviderAttachments
from deel_python_sdk.pydantic.health_insurance_provider_plans import HealthInsuranceProviderPlans

class HealthInsuranceProvider(BaseModel):
    # Unique identifier of this resource.
    id: typing.Optional[str] = Field(None, alias='id')

    # Name of insurance provider.
    name: typing.Optional[str] = Field(None, alias='name')

    is_unisure: typing.Optional[bool] = Field(None, alias='is_unisure')

    # Insurance provider's home page url.
    home_page_url: typing.Optional[str] = Field(None, alias='home_page_url')

    # Payment currency.
    currency: typing.Optional[str] = Field(None, alias='currency')

    # Insurance type.
    type: typing.Optional[str] = Field(None, alias='type')

    # Insurance cycle ending rule.
    ending_rule: typing.Optional[str] = Field(None, alias='ending_rule')

    # Days to cancel the insurance.
    days_to_cancel: typing.Optional[str] = Field(None, alias='days_to_cancel')

    # URL to price info.
    pricing_info_link: typing.Optional[str] = Field(None, alias='pricing_info_link')

    # URL to price info.
    fixed_price: typing.Optional[bool] = Field(None, alias='fixed_price')

    attachments: typing.Optional[HealthInsuranceProviderAttachments] = Field(None, alias='attachments')

    # Health insurance info banner.
    client_info_banner: typing.Optional[str] = Field(None, alias='client_info_banner')

    is_available_for_new_quotes: typing.Optional[bool] = Field(None, alias='is_available_for_new_quotes')

    plans: typing.Optional[HealthInsuranceProviderPlans] = Field(None, alias='plans')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
