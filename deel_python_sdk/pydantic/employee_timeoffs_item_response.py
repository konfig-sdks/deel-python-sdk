# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from deel_python_sdk.pydantic.employee_timeoffs_item_response_applied_changes import EmployeeTimeoffsItemResponseAppliedChanges
from deel_python_sdk.pydantic.employee_timeoffs_item_response_attachments import EmployeeTimeoffsItemResponseAttachments
from deel_python_sdk.pydantic.requester_time_off import RequesterTimeOff

class EmployeeTimeoffsItemResponse(BaseModel):
    time_off_id: typing.Optional[str] = Field(None, alias='time_off_id')

    time_off_type_id: typing.Optional[str] = Field(None, alias='time_off_type_id')

    policy_id: typing.Optional[str] = Field(None, alias='policy_id')

    policy_name: typing.Optional[str] = Field(None, alias='policy_name')

    policy_type_name: typing.Optional[str] = Field(None, alias='policy_type_name')

    reason: typing.Optional[str] = Field(None, alias='reason')

    # Time off type.
    type: typing.Optional[Literal["VACATION", "SICK_LEAVE", "OTHER"]] = Field(None, alias='type')

    requested_at: typing.Optional[str] = Field(None, alias='requested_at')

    reviewed_at: typing.Optional[str] = Field(None, alias='reviewed_at')

    with_multiple_dates: typing.Optional[bool] = Field(None, alias='with_multiple_dates')

    single_date: typing.Optional[str] = Field(None, alias='single_date')

    created_at: typing.Optional[str] = Field(None, alias='created_at')

    updated_at: typing.Optional[str] = Field(None, alias='updated_at')

    denial_reason: typing.Optional[bool] = Field(None, alias='denial_reason')

    requester: typing.Optional[RequesterTimeOff] = Field(None, alias='requester')

    days_used_start_year: typing.Optional[str] = Field(None, alias='days_used_start_year')

    days_used_end_year: typing.Optional[str] = Field(None, alias='days_used_end_year')

    days_used: typing.Optional[str] = Field(None, alias='days_used')

    start_date: typing.Optional[str] = Field(None, alias='start_date')

    end_date: typing.Optional[str] = Field(None, alias='end_date')

    is_start_date_half_day: typing.Optional[bool] = Field(None, alias='is_start_date_half_day')

    is_end_date_half_day: typing.Optional[bool] = Field(None, alias='is_end_date_half_day')

    attachments: typing.Optional[EmployeeTimeoffsItemResponseAttachments] = Field(None, alias='attachments')

    change_request: typing.Optional[str] = Field(None, alias='change_request')

    is_updated: typing.Optional[bool] = Field(None, alias='is_updated')

    applied_changes: typing.Optional[EmployeeTimeoffsItemResponseAppliedChanges] = Field(None, alias='applied_changes')

    can_request_changes: typing.Optional[bool] = Field(None, alias='can_request_changes')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
