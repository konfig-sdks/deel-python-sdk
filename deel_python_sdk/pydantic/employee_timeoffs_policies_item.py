# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from deel_python_sdk.pydantic.employee_timeoffs_policies_item_entitlement import EmployeeTimeoffsPoliciesItemEntitlement

class EmployeeTimeoffsPoliciesItem(BaseModel):
    # Description of the time off policy.
    description: str = Field(alias='description')

    # Unique identifier for the time off policy.
    id: str = Field(alias='id')

    # Type of time off policy.
    type: str = Field(alias='type')

    # Name of the time off policy.
    name: str = Field(alias='name')

    # Unit amount of the time off policy.
    unit_amount: typing.Union[int, float] = Field(alias='unit_amount')

    # Used time off policy.
    used: typing.Optional[typing.Union[int, float]] = Field(alias='used')

    # Start date of the time off policy.
    tracking_start_date: typing.Union[bool, date, datetime, dict, float, int, list, str, None] = Field(alias='tracking_start_date')

    # End date of the time off policy.
    tracking_end_date: typing.Union[bool, date, datetime, dict, float, int, list, str, None] = Field(alias='tracking_end_date')

    entitlement: EmployeeTimeoffsPoliciesItemEntitlement = Field(alias='entitlement')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
