# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from deel_python_sdk.pydantic.country_code import CountryCode
from deel_python_sdk.pydantic.date_string import DateString

class AdjustmentToCreate(BaseModel):
    # Title of adjustment.
    title: str = Field(alias='title')

    # Description of adjustment.
    description: str = Field(alias='description')

    # The identifier of the contract associated with the adjustment
    contract_id: str = Field(alias='contract_id')

    # Amount of adjustment.
    amount: typing.Union[str, typing.Union[int, float]] = Field(alias='amount')

    # File of adjustment.
    file: typing.IO = Field(alias='file')

    # Adjustment category id.
    adjustment_category_id: str = Field(alias='adjustment_category_id')

    # Vendor of adjustment.
    vendor: str = Field(alias='vendor')

    country: CountryCode = Field(alias='country')

    date_of_adjustment: typing.Optional[DateString] = Field(None, alias='date_of_adjustment')

    # Cycle reference of adjustment.
    cycle_reference: typing.Optional[str] = Field(None, alias='cycle_reference')

    # If an adjustments can belong to another payroll cycle.
    move_next_cycle: typing.Optional[typing.Optional[bool]] = Field(None, alias='move_next_cycle')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
