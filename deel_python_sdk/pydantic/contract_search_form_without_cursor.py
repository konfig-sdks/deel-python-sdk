# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from deel_python_sdk.pydantic.contract_status_enum import ContractStatusEnum
from deel_python_sdk.pydantic.contract_status_enum_list import ContractStatusEnumList
from deel_python_sdk.pydantic.contract_type_enum import ContractTypeEnum
from deel_python_sdk.pydantic.contract_type_enum_list import ContractTypeEnumList
from deel_python_sdk.pydantic.contracts_sort_by_enum import ContractsSortByEnum
from deel_python_sdk.pydantic.country_code import CountryCode
from deel_python_sdk.pydantic.country_code_list import CountryCodeList
from deel_python_sdk.pydantic.currency_code_list import CurrencyCodeList
from deel_python_sdk.pydantic.currency_code_required import CurrencyCodeRequired
from deel_python_sdk.pydantic.sort_dir_enum import SortDirEnum

class ContractSearchFormWithoutCursor(BaseModel):
    # Return a page of results with given number of records.
    limit: typing.Optional[str] = Field(None, alias='limit')

    order_direction: typing.Optional[SortDirEnum] = Field(None, alias='order_direction')

    types: typing.Optional[typing.Union[ContractTypeEnum, ContractTypeEnumList]] = Field(None, alias='types')

    statuses: typing.Optional[typing.Union[ContractStatusEnumList, ContractStatusEnum]] = Field(None, alias='statuses')

    # Unique identifier of this resource.
    team_id: typing.Optional[str] = Field(None, alias='team_id')

    # Filter contracts for given external ID
    external_id: typing.Optional[str] = Field(None, alias='external_id')

    countries: typing.Optional[typing.Union[CountryCodeList, CountryCode]] = Field(None, alias='countries')

    currencies: typing.Optional[typing.Union[CurrencyCodeList, CurrencyCodeRequired]] = Field(None, alias='currencies')

    # Include a contract if by name or contractor name contains given search term.
    search: typing.Optional[str] = Field(None, alias='search')

    sort_by: typing.Optional[ContractsSortByEnum] = Field(None, alias='sort_by')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
