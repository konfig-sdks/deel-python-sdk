# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from deel_python_sdk.pydantic.client_of_contract import ClientOfContract
from deel_python_sdk.pydantic.compensation_details_of_contract import CompensationDetailsOfContract
from deel_python_sdk.pydantic.contract_custom_field import ContractCustomField
from deel_python_sdk.pydantic.contract_status_enum import ContractStatusEnum
from deel_python_sdk.pydantic.contract_template import ContractTemplate
from deel_python_sdk.pydantic.contract_type_enum import ContractTypeEnum
from deel_python_sdk.pydantic.contract_who_reports_enum import ContractWhoReportsEnum
from deel_python_sdk.pydantic.date_time_string import DateTimeString
from deel_python_sdk.pydantic.employment_details_of_contract import EmploymentDetailsOfContract
from deel_python_sdk.pydantic.eor_quote_base import EorQuoteBase
from deel_python_sdk.pydantic.invitations_of_basic_contract import InvitationsOfBasicContract
from deel_python_sdk.pydantic.notice_period import NoticePeriod
from deel_python_sdk.pydantic.seniority import Seniority
from deel_python_sdk.pydantic.signatures_of_contract import SignaturesOfContract
from deel_python_sdk.pydantic.worker_of_contract import WorkerOfContract

class Contract(BaseModel):
    title: str = Field(alias='title')

    id: str = Field(alias='id')

    type: ContractTypeEnum = Field(alias='type')

    status: ContractStatusEnum = Field(alias='status')

    created_at: DateTimeString = Field(alias='created_at')

    job_title: str = Field(alias='job_title')

    seniority: Seniority = Field(alias='seniority')

    start_date: DateTimeString = Field(alias='start_date')

    termination_date: DateTimeString = Field(alias='termination_date')

    special_clause: str = Field(alias='special_clause')

    is_archived: bool = Field(alias='is_archived')

    client: ClientOfContract = Field(alias='client')

    worker: WorkerOfContract = Field(alias='worker')

    invitations: InvitationsOfBasicContract = Field(alias='invitations')

    signatures: SignaturesOfContract = Field(alias='signatures')

    compensation_details: CompensationDetailsOfContract = Field(alias='compensation_details')

    employment_details: EmploymentDetailsOfContract = Field(alias='employment_details')

    who_reports: typing.Optional[ContractWhoReportsEnum] = Field(None, alias='who_reports')

    scope_of_work: typing.Optional[typing.Optional[str]] = Field(None, alias='scope_of_work')

    notice_period: typing.Optional[NoticePeriod] = Field(None, alias='notice_period')

    contract_template: typing.Optional[ContractTemplate] = Field(None, alias='contract_template')

    custom_fields: typing.Optional[typing.List[ContractCustomField]] = Field(None, alias='custom_fields')

    quote: typing.Optional[EorQuoteBase] = Field(None, alias='quote')

    # A unique identifier for the object provided by an external system.
    external_id: typing.Optional[typing.Optional[str]] = Field(None, alias='external_id')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
