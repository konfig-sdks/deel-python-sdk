# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from deel_python_sdk.pydantic.address import Address
from deel_python_sdk.pydantic.date_time_string import DateTimeString
from deel_python_sdk.pydantic.email import Email
from deel_python_sdk.pydantic.employee_department import EmployeeDepartment
from deel_python_sdk.pydantic.employee_direct_manager import EmployeeDirectManager
from deel_python_sdk.pydantic.employee_direct_reports import EmployeeDirectReports
from deel_python_sdk.pydantic.employment_detail import EmploymentDetail
from deel_python_sdk.pydantic.people_client_legal_entity import PeopleClientLegalEntity

class Employee(BaseModel):
    # Unique identifier for the employee.
    id: typing.Optional[str] = Field(None, alias='id')

    # The creation timestamp of the employee record.
    created_at: typing.Optional[datetime] = Field(None, alias='created_at')

    # The first name of the employee.
    first_name: typing.Optional[str] = Field(None, alias='first_name')

    # The last name of the employee.
    last_name: typing.Optional[str] = Field(None, alias='last_name')

    # The full name of the employee.
    full_name: typing.Optional[str] = Field(None, alias='full_name')

    addresses: typing.Optional[typing.List[Address]] = Field(None, alias='addresses')

    # An array of the employee's email addresses.
    emails: typing.Optional[typing.List[Email]] = Field(None, alias='emails')

    # The birth date of the employee.
    birth_date: typing.Optional[str] = Field(None, alias='birth_date')

    # The date the employee started working.
    start_date: typing.Optional[date] = Field(None, alias='start_date')

    # The nationality of the employee.
    nationality: typing.Optional[str] = Field(None, alias='nationality')

    client_legal_entity: typing.Optional[PeopleClientLegalEntity] = Field(None, alias='client_legal_entity')

    # The state of the employee.
    state: typing.Optional[str] = Field(None, alias='state')

    # The seniority level of the employee.
    seniority: typing.Optional[str] = Field(None, alias='seniority')

    # The completion date of the task or project.
    completion_date: typing.Optional[typing.Optional[str]] = Field(None, alias='completion_date')

    direct_manager: typing.Optional[EmployeeDirectManager] = Field(None, alias='direct_manager')

    direct_reports: typing.Optional[EmployeeDirectReports] = Field(None, alias='direct_reports')

    # The count of direct reports to the employee.
    direct_reports_count: typing.Optional[int] = Field(None, alias='direct_reports_count')

    # An array of the employee's employment details.
    employments: typing.Optional[typing.List[EmploymentDetail]] = Field(None, alias='employments')

    # The current hiring status of the employee.
    hiring_status: typing.Optional[str] = Field(None, alias='hiring_status')

    # The new hiring status of the employee.
    new_hiring_status: typing.Optional[str] = Field(None, alias='new_hiring_status')

    # The type of hiring of the employee.
    hiring_type: typing.Optional[str] = Field(None, alias='hiring_type')

    # The job title of the employee.
    job_title: typing.Optional[str] = Field(None, alias='job_title')

    # The country of the employee.
    country: typing.Optional[str] = Field(None, alias='country')

    # The timezone of the employee.
    timezone: typing.Optional[str] = Field(None, alias='timezone')

    department: typing.Optional[EmployeeDepartment] = Field(None, alias='department')

    # The work location of the employee.
    work_location: typing.Optional[str] = Field(None, alias='work_location')

    updated_at: typing.Optional[DateTimeString] = Field(None, alias='updated_at')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
