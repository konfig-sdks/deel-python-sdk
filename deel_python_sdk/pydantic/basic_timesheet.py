# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from deel_python_sdk.pydantic.basic_timesheet_contract import BasicTimesheetContract
from deel_python_sdk.pydantic.basic_timesheet_payment_cycle import BasicTimesheetPaymentCycle
from deel_python_sdk.pydantic.basic_timesheet_reported_by import BasicTimesheetReportedBy
from deel_python_sdk.pydantic.basic_timesheet_reviewed_by import BasicTimesheetReviewedBy
from deel_python_sdk.pydantic.basic_timesheet_worksheet import BasicTimesheetWorksheet
from deel_python_sdk.pydantic.currency_code_required import CurrencyCodeRequired
from deel_python_sdk.pydantic.file_attachment_info import FileAttachmentInfo
from deel_python_sdk.pydantic.timesheet_status_enum import TimesheetStatusEnum

class BasicTimesheet(BaseModel):
    description: str = Field(alias='description')

    # Unique identifier of this resource.
    id: str = Field(alias='id')

    # Deprecated - it is always \"work\"
    type: str = Field(alias='type')

    status: TimesheetStatusEnum = Field(alias='status')

    # Long date-time format following ISO-8601
    date_submitted: datetime = Field(alias='date_submitted')

    currency_code: CurrencyCodeRequired = Field(alias='currency_code')

    # is equal to quantity times rate of active work statement + bonus in this record
    total_amount: str = Field(alias='total_amount')

    quantity: typing.Optional[typing.Union[int, float]] = Field(alias='quantity')

    created_at: str = Field(alias='created_at')

    attachment: FileAttachmentInfo = Field(alias='attachment')

    worksheet: BasicTimesheetWorksheet = Field(alias='worksheet')

    reviewed_by: BasicTimesheetReviewedBy = Field(alias='reviewed_by')

    contract: BasicTimesheetContract = Field(alias='contract')

    reported_by: BasicTimesheetReportedBy = Field(alias='reported_by')

    scale: typing.Optional[typing.Optional[str]] = Field(None, alias='scale')

    custom_scale: typing.Optional[typing.Optional[str]] = Field(None, alias='custom_scale')

    payment_cycle: typing.Optional[BasicTimesheetPaymentCycle] = Field(None, alias='payment_cycle')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
