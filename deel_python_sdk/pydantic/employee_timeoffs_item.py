# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from deel_python_sdk.pydantic.employee_timeoffs_item_attachments import EmployeeTimeoffsItemAttachments
from deel_python_sdk.pydantic.employee_timeoffs_item_requester import EmployeeTimeoffsItemRequester
from deel_python_sdk.pydantic.employee_timeoffs_item_reviewer import EmployeeTimeoffsItemReviewer

class EmployeeTimeoffsItem(BaseModel):
    # Unique identifier of this resource.
    time_off_id: str = Field(alias='time_off_id')

    reason: str = Field(alias='reason')

    # Time off type.
    type: Literal["VACATION", "SICK_LEAVE", "OTHER"] = Field(alias='type')

    requested_at: str = Field(alias='requested_at')

    reviewed_at: str = Field(alias='reviewed_at')

    with_multiple_dates: bool = Field(alias='with_multiple_dates')

    created_at: str = Field(alias='created_at')

    updated_at: str = Field(alias='updated_at')

    denial_reason: typing.Optional[str] = Field(alias='denial_reason')

    requester: EmployeeTimeoffsItemRequester = Field(alias='requester')

    reviewer: EmployeeTimeoffsItemReviewer = Field(alias='reviewer')

    days_used_start_year: str = Field(alias='days_used_start_year')

    days_used_end_year: str = Field(alias='days_used_end_year')

    days_used: str = Field(alias='days_used')

    start_date: str = Field(alias='start_date')

    end_date: str = Field(alias='end_date')

    is_start_date_half_day: bool = Field(alias='is_start_date_half_day')

    is_end_date_half_day: bool = Field(alias='is_end_date_half_day')

    attachments: EmployeeTimeoffsItemAttachments = Field(alias='attachments')

    change_request: typing.Optional[str] = Field(alias='change_request')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
