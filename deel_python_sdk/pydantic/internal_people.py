# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from deel_python_sdk.pydantic.employment import Employment
from deel_python_sdk.pydantic.internal_people_contract_types import InternalPeopleContractTypes
from deel_python_sdk.pydantic.monthly_payment import MonthlyPayment
from deel_python_sdk.pydantic.payment import Payment
from deel_python_sdk.pydantic.people_client_legal_entity import PeopleClientLegalEntity

class InternalPeople(BaseModel):
    # Unique identifier for the user
    id: typing.Optional[str] = Field(None, alias='id')

    # First name of the user
    first_name: typing.Optional[str] = Field(None, alias='first_name')

    # Last name of the user
    last_name: typing.Optional[str] = Field(None, alias='last_name')

    # Full name of the user
    full_name: typing.Optional[str] = Field(None, alias='full_name')

    # Email address of the user
    email: typing.Optional[str] = Field(None, alias='email')

    # Work email address of the user
    work_email: typing.Optional[str] = Field(None, alias='work_email')

    # Personal email address of the user
    personal_email: typing.Optional[str] = Field(None, alias='personal_email')

    # Name of the country where the user is located
    country_name: typing.Optional[str] = Field(None, alias='country_name')

    # Date of birth of the user in ISO format (yyyy-mm-dd)
    birth_date: typing.Optional[str] = Field(None, alias='birth_date')

    # URL of the user's profile picture
    pic_url: typing.Optional[str] = Field(None, alias='pic_url')

    # Date when the user started their current employment in ISO format (yyyy-mm-dd)
    start_date: typing.Optional[str] = Field(None, alias='start_date')

    # List of payment objects representing the user's payment history
    payments: typing.Optional[typing.List[Payment]] = Field(None, alias='payments')

    # Total amount of hours worked by the user in ISO format (hh:mm:ss)
    hourly_report_total: typing.Optional[str] = Field(None, alias='hourly_report_total')

    client_legal_entity: typing.Optional[PeopleClientLegalEntity] = Field(None, alias='client_legal_entity')

    # State where the user is located
    state: typing.Optional[str] = Field(None, alias='state')

    # Seniority level of the user's role
    seniority: typing.Optional[str] = Field(None, alias='seniority')

    # Date when the user's current employment is expected to end in ISO format (yyyy-mm-ddThh:mm:ss.sssZ)
    completion_date: typing.Optional[str] = Field(None, alias='completion_date')

    monthly_payment: typing.Optional[MonthlyPayment] = Field(None, alias='monthly_payment')

    # Name of the user's direct manager
    direct_manager: typing.Optional[str] = Field(None, alias='direct_manager')

    # Names of the user's direct reports
    direct_reports: typing.Optional[str] = Field(None, alias='direct_reports')

    # Number of direct reports that the user has
    direct_reports_count: typing.Optional[int] = Field(None, alias='direct_reports_count')

    # List of employment objects representing the user's employment history
    employments: typing.Optional[typing.List[Employment]] = Field(None, alias='employments')

    # Hiring status of the user
    hiring_status: typing.Optional[str] = Field(None, alias='hiring_status')

    # Type of employment contract that the user has
    hiring_type: typing.Optional[str] = Field(None, alias='hiring_type')

    # Title of the user's role
    job_title: typing.Optional[str] = Field(None, alias='job_title')

    # ISO 3166-1 alpha-2 code of the country where the user is located
    country: typing.Optional[str] = Field(None, alias='country')

    # Unique identifier for the team that the user belongs to
    team_id: typing.Optional[int] = Field(None, alias='team_id')

    # Name of the team that the user belongs to
    team: typing.Optional[str] = Field(None, alias='team')

    # Time zone of the user's location
    timezone: typing.Optional[str] = Field(None, alias='timezone')

    # Name of the department that the user belongs to
    department: typing.Optional[str] = Field(None, alias='department')

    # Name of the user's work location
    work_location: typing.Optional[str] = Field(None, alias='work_location')

    contract_types: typing.Optional[InternalPeopleContractTypes] = Field(None, alias='contract_types')

    # Indicates whether the user has a Deel account or not
    has_deel_user: typing.Optional[bool] = Field(None, alias='has_deel_user')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
