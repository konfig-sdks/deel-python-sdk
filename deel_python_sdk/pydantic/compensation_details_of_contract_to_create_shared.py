# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from deel_python_sdk.pydantic.currency_code_required import CurrencyCodeRequired
from deel_python_sdk.pydantic.date_string import DateString
from deel_python_sdk.pydantic.notice_period import NoticePeriod
from deel_python_sdk.pydantic.work_statement_cycle_end_type_enum import WorkStatementCycleEndTypeEnum
from deel_python_sdk.pydantic.work_statement_cycle_scale_enum import WorkStatementCycleScaleEnum
from deel_python_sdk.pydantic.work_statement_payment_due_type_enum import WorkStatementPaymentDueTypeEnum

class CompensationDetailsOfContractToCreateShared(BaseModel):
    currency_code: CurrencyCodeRequired = Field(alias='currency_code')

    frequency: WorkStatementCycleScaleEnum = Field(alias='frequency')

    # Date invoice cycle ends.
    cycle_end: typing.Union[int, float] = Field(alias='cycle_end')

    cycle_end_type: WorkStatementCycleEndTypeEnum = Field(alias='cycle_end_type')

    payment_due_type: WorkStatementPaymentDueTypeEnum = Field(alias='payment_due_type')

    payment_due_days: typing.Union[int, float] = Field(alias='payment_due_days')

    # Amount to be paid. This field can be excluded when creating a Pay-as-you-go task-based or Milestone contracts.
    amount: typing.Optional[typing.Union[int, float]] = Field(None, alias='amount')

    # If the payment due is on a weekend, pay on Friday.
    pay_before_weekends: typing.Optional[bool] = Field(None, alias='pay_before_weekends')

    first_payment_date: typing.Optional[DateString] = Field(None, alias='first_payment_date')

    # First payment amount.
    first_payment: typing.Optional[typing.Union[int, float]] = Field(None, alias='first_payment')

    notice_period: typing.Optional[NoticePeriod] = Field(None, alias='notice_period')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
