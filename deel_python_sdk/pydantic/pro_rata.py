# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from deel_python_sdk.pydantic.date_string_required import DateStringRequired
from deel_python_sdk.pydantic.week_days_enum import WeekDaysEnum

class ProRata(BaseModel):
    # Either works days or calendar days
    calculation_type: typing.Optional[Literal["CUSTOM_AMOUNT", "WORK_DAYS", "CALENDAR_DAYS", "FULL_AMOUNT"]] = Field(None, alias='calculation_type')

    # Rate to be paid.
    rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='rate')

    # Daily rate to be paid.
    daily_rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='daily_rate')

    # Total to be paid.
    total: typing.Optional[typing.Union[int, float]] = Field(None, alias='total')

    # Total days to be work.
    cycle_work_days: typing.Optional[typing.Union[int, float]] = Field(None, alias='cycle_work_days')

    work_week_start: typing.Optional[WeekDaysEnum] = Field(None, alias='work_week_start')

    work_week_end: typing.Optional[WeekDaysEnum] = Field(None, alias='work_week_end')

    cycle_start: typing.Optional[DateStringRequired] = Field(None, alias='cycle_start')

    cycle_end: typing.Optional[DateStringRequired] = Field(None, alias='cycle_end')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
