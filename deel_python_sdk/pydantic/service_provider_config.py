# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from deel_python_sdk.pydantic.authentication_schemes import AuthenticationSchemes
from deel_python_sdk.pydantic.bulk_supported import BulkSupported
from deel_python_sdk.pydantic.filter_supported import FilterSupported
from deel_python_sdk.pydantic.service_provider_config_schemas import ServiceProviderConfigSchemas
from deel_python_sdk.pydantic.supported import Supported

class ServiceProviderConfig(BaseModel):
    authentication_schemes: typing.Optional[AuthenticationSchemes] = Field(None, alias='authenticationSchemes')

    bulk: typing.Optional[BulkSupported] = Field(None, alias='bulk')

    change_password: typing.Optional[Supported] = Field(None, alias='changePassword')

    etag: typing.Optional[Supported] = Field(None, alias='etag')

    filter: typing.Optional[FilterSupported] = Field(None, alias='filter')

    patch: typing.Optional[Supported] = Field(None, alias='patch')

    schemas: typing.Optional[ServiceProviderConfigSchemas] = Field(None, alias='schemas')

    sort: typing.Optional[Supported] = Field(None, alias='sort')

    xml_data_format: typing.Optional[Supported] = Field(None, alias='xmlDataFormat')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
