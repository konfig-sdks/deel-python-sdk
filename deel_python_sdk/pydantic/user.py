# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from deel_python_sdk.pydantic.email import Email
from deel_python_sdk.pydantic.enterprise_user import EnterpriseUser
from deel_python_sdk.pydantic.name import Name
from deel_python_sdk.pydantic.user_extension import UserExtension
from deel_python_sdk.pydantic.user_meta import UserMeta
from deel_python_sdk.pydantic.user_schemas import UserSchemas

class User(BaseModel):
    emails: typing.List[Email] = Field(alias='emails')

    name: Name = Field(alias='name')

    schemas: UserSchemas = Field(alias='schemas')

    # User's work email.
    user_name: str = Field(alias='userName')

    meta: UserMeta = Field(alias='meta')

    # Job title.
    title: typing.Optional[str] = Field(None, alias='title')

    # Hiring status. True if user employment is active. False if employment is not active.
    active: typing.Optional[bool] = Field(None, alias='active')

    # User type.
    user_type: typing.Optional[str] = Field(None, alias='userType')

    # Unique resource id (UUID) defined by Deel.
    id: typing.Optional[str] = Field(None, alias='id')

    urn:ietf:params:scim:schemas:extension:enterprise:2.0:_user_: typing.Optional[EnterpriseUser] = Field(None, alias='urn:ietf:params:scim:schemas:extension:enterprise:2.0:User')

    urn:ietf:params:scim:schemas:extension:2.0:_user_: typing.Optional[UserExtension] = Field(None, alias='urn:ietf:params:scim:schemas:extension:2.0:User')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
