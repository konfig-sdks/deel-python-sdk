# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class GlobalPayrollG2NReport(BaseModel):
    net_pay: typing.Optional[typing.Optional[str]] = Field(None, alias='net_pay')

    ee_loans: typing.Optional[typing.Optional[str]] = Field(None, alias='ee_loans')

    contract_id: typing.Optional[str] = Field(None, alias='contract_id')

    annual_bonus: typing.Optional[typing.Optional[typing.Union[int, float]]] = Field(None, alias='annual_bonus')

    car_allowance: typing.Optional[typing.Optional[typing.Union[int, float]]] = Field(None, alias='car_allowance')

    esp_deduction: typing.Optional[typing.Optional[typing.Union[int, float]]] = Field(None, alias='esp_deduction')

    employee_name: typing.Optional[typing.Optional[str]] = Field(None, alias='employee_name')

    employer_cost: typing.Optional[typing.Optional[str]] = Field(None, alias='employer_cost')

    funding_amount: typing.Optional[typing.Optional[typing.Union[int, float]]] = Field(None, alias='funding_amount')

    home_allowance: typing.Optional[typing.Optional[str]] = Field(None, alias='home_allowance')

    ee_income_tax: typing.Optional[typing.Optional[str]] = Field(None, alias='ee_income_tax')

    employee_number: typing.Optional[typing.Optional[typing.Union[int, float]]] = Field(None, alias='employee_number')

    backdated_salary: typing.Optional[typing.Optional[str]] = Field(None, alias='backdated_salary')

    employer_contribution: typing.Optional[typing.Optional[str]] = Field(None, alias='employer_contribution')

    er_occupational_risk: typing.Optional[typing.Optional[str]] = Field(None, alias='er_occupational_risk')

    employment_status_tag_internal: typing.Optional[typing.Optional[str]] = Field(None, alias='employment_status_tag_internal')

    employee_job_title: typing.Optional[typing.Optional[str]] = Field(None, alias='employee_job_title')

    employee_division: typing.Optional[typing.Optional[str]] = Field(None, alias='employee_division')

    employee_department: typing.Optional[typing.Optional[str]] = Field(None, alias='employee_department')

    pension_contribution: typing.Optional[typing.Optional[typing.Union[int, float]]] = Field(None, alias='pension_contribution')

    cost_center: typing.Optional[typing.Optional[str]] = Field(None, alias='cost_center')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
