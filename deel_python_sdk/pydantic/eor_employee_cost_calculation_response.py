# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from deel_python_sdk.pydantic.eor_employee_cost_calculation_response_additional_data import EorEmployeeCostCalculationResponseAdditionalData
from deel_python_sdk.pydantic.eor_employee_cost_calculation_response_benefits_data import EorEmployeeCostCalculationResponseBenefitsData
from deel_python_sdk.pydantic.eor_employee_cost_calculation_response_costs import EorEmployeeCostCalculationResponseCosts

class EorEmployeeCostCalculationResponse(BaseModel):
    # The gross annual salary of the employee.
    salary: typing.Optional[str] = Field(None, alias='salary')

    # The currency of the employee salary.
    currency: typing.Optional[str] = Field(None, alias='currency')

    # The country of employment.
    country: typing.Optional[str] = Field(None, alias='country')

    # The country code for the country of employment.
    country_code: typing.Optional[str] = Field(None, alias='country_code')

    # The frequency that the salary is paid out to the employee.
    frequency: typing.Optional[str] = Field(None, alias='frequency')

    # The monthly Deel fee.
    deel_fee: typing.Optional[str] = Field(None, alias='deel_fee')

    # Monthly funds to cover future potential severance payments to the employee.
    severance_accrual: typing.Optional[str] = Field(None, alias='severance_accrual')

    # Total monthly cost including salary, Deel fee, severance accrual and employer costs.
    total_costs: typing.Optional[str] = Field(None, alias='total_costs')

    # Total monthly employer costs. Does not include Deel fee, salary and severance accrual.
    employer_costs: typing.Optional[str] = Field(None, alias='employer_costs')

    costs: typing.Optional[EorEmployeeCostCalculationResponseCosts] = Field(None, alias='costs')

    additional_data: typing.Optional[EorEmployeeCostCalculationResponseAdditionalData] = Field(None, alias='additional_data')

    benefits_data: typing.Optional[EorEmployeeCostCalculationResponseBenefitsData] = Field(None, alias='benefits_data')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
