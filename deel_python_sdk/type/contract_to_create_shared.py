# coding: utf-8

"""
    Deel REST API

    API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from deel_python_sdk.type.contract_to_create_shared_client import ContractToCreateSharedClient
from deel_python_sdk.type.contract_to_create_shared_job_title import ContractToCreateSharedJobTitle
from deel_python_sdk.type.contract_to_create_shared_seniority import ContractToCreateSharedSeniority
from deel_python_sdk.type.contract_to_create_shared_worker import ContractToCreateSharedWorker
from deel_python_sdk.type.contract_who_reports_enum import ContractWhoReportsEnum
from deel_python_sdk.type.country_code import CountryCode
from deel_python_sdk.type.date_string import DateString
from deel_python_sdk.type.meta_data_of_contract_to_create import MetaDataOfContractToCreate
from deel_python_sdk.type.notice_period import NoticePeriod

class RequiredContractToCreateShared(TypedDict):
    # The title of the contract.
    title: str

    client: ContractToCreateSharedClient

    job_title: ContractToCreateSharedJobTitle

    meta: MetaDataOfContractToCreate

class OptionalContractToCreateShared(TypedDict, total=False):
    country_code: CountryCode

    # The state or province code. Use country lookup endpoint to retrieve state codes.
    state_code: typing.Optional[str]

    # Describe the work to be performed.
    scope_of_work: typing.Optional[str]

    # Enter any special clause you may have.
    special_clause: typing.Optional[str]

    termination_date: DateString

    seniority: typing.Optional[ContractToCreateSharedSeniority]

    notice_period: NoticePeriod

    who_reports: ContractWhoReportsEnum

    # External Id.
    external_id: typing.Optional[str]

    worker: typing.Optional[ContractToCreateSharedWorker]

class ContractToCreateShared(RequiredContractToCreateShared, OptionalContractToCreateShared):
    pass
